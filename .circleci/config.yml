# This config was automatically generated from your source code
# Stacks detected: deps:node:.
version: 2.1
orbs:
  node: circleci/node@5
jobs:
  build-node:
    docker:
      - image: cypress/included:12.17.1
    # Build node project WORK
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npx cypress --version
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
      - run:
          command: npm run dev
          background: true
      - run:
          command: npm install --global @percy/cli
      - run:
          command: npx percy exec -- npx cypress run

  preview_deployment:
    docker:
      - image: cimg/node:20.8
    environment:
      VERCEL_ORG_ID: $VERCEL_ORG_ID
      VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID
    steps:
      - checkout
      - run:
          name: Install Vercel CLI Locally
          command: npm install vercel
      - run: 
          name: Pull Vercel Environment Information 
          command: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
      - run:
          name: Build Project Artifacts
          command: npx vercel build --token=$VERCEL_TOKEN
      - run:
          name: Deploy Project Artifacts to Vercel
          command: npx vercel deploy --prebuilt --token=$VERCEL_TOKEN

  production_deployment:
    docker:
      - image: cimg/node:20.8
    environment:
      VERCEL_ORG_ID: $VERCEL_ORG_ID
      VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID
    steps:
      - checkout
      - run:
          name: Install Vercel CLI
          command: npm install vercel
      - run:
          name: Pull Vercel Environment Information
          command: npx vercel pull --yes --environment=production --token=$VERCEL_TOKEN
      - run:
          name: Build Project Artifacts
          command: npx vercel build --prod --token=$VERCEL_TOKEN
      - run:
          name: Deploy Project Artifacts to Vercel
          command: npx vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
workflows:
  build_and_deploy:
    jobs:
     - build-node
     - preview_deployment:
         requires:
           - build-node
         filters:
           branches:
             ignore: main
     - production_deployment:
         requires:
           - build-node
         filters:
           branches:
             only: main
  